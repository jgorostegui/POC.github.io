<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Posts on </title>
    <link>https://jgorostegui.github.io/POC.github.io/post/</link>
    <description>Recent content in Posts on </description>
    <generator>Hugo -- gohugo.io</generator>
    <language>es-ES</language>
    <lastBuildDate>Tue, 03 Mar 2020 00:00:00 +0000</lastBuildDate>
    
	<atom:link href="https://jgorostegui.github.io/POC.github.io/post/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>Awesomeness</title>
      <link>https://jgorostegui.github.io/POC.github.io/post/awesomeness/</link>
      <pubDate>Fri, 26 Sep 2014 00:00:00 +0000</pubDate>
      
      <guid>https://jgorostegui.github.io/POC.github.io/post/awesomeness/</guid>
      <description>Introduction This tutorial will show you how to create a simple theme in Hugo. I assume that you are familiar with HTML, the bash command line, and that you are comfortable using Markdown to format content. I&amp;rsquo;ll explain how Hugo uses templates and how you can organize your templates to create a theme. I won&amp;rsquo;t cover using CSS to style your theme.
We&amp;rsquo;ll start with creating a new site with a very basic template.</description>
    </item>
    
    <item>
      <title>Wonderful</title>
      <link>https://jgorostegui.github.io/POC.github.io/post/wonderful/</link>
      <pubDate>Thu, 25 Sep 2014 00:00:00 +0000</pubDate>
      
      <guid>https://jgorostegui.github.io/POC.github.io/post/wonderful/</guid>
      <description>Introduction This tutorial will show you how to create a simple theme in Hugo. I assume that you are familiar with HTML, the bash command line, and that you are comfortable using Markdown to format content. I&amp;rsquo;ll explain how Hugo uses templates and how you can organize your templates to create a theme. I won&amp;rsquo;t cover using CSS to style your theme.
We&amp;rsquo;ll start with creating a new site with a very basic template.</description>
    </item>
    
    <item>
      <title>Bienvenido a Tecnócratas</title>
      <link>https://jgorostegui.github.io/POC.github.io/post/bienvenido-a-tecn%C3%B3cratas/</link>
      <pubDate>Tue, 03 Mar 2020 00:00:00 +0000</pubDate>
      
      <guid>https://jgorostegui.github.io/POC.github.io/post/bienvenido-a-tecn%C3%B3cratas/</guid>
      <description>Bienvenido a tecnócratas digitales
Cosas tochas print(&amp;#39;Hello World!&amp;#39;) </description>
    </item>
    
    <item>
      <title>Aprendiendo Python</title>
      <link>https://jgorostegui.github.io/POC.github.io/post/aprendiendo-python/</link>
      <pubDate>Sat, 01 Feb 2020 00:00:00 +0000</pubDate>
      
      <guid>https://jgorostegui.github.io/POC.github.io/post/aprendiendo-python/</guid>
      <description>Llevaba tiempo mascando esta serie de entradas para aprender a programar en Python, para las cuales no quise quedarme en algo del tipo mira, aprende y copia. El curso tiene un enfoque práctico con su parte de teoría y ejercicios donde corresponda. Atendiendo a las actuales necesidades formativas he decidido que el curso y su material podrá ser trabajado de manera online utilizando únicamente un navegador web.</description>
    </item>
    
    <item>
      <title>Automatizando con Ansible</title>
      <link>https://jgorostegui.github.io/POC.github.io/post/automatizando-con-ansible/</link>
      <pubDate>Tue, 02 Apr 2019 00:00:00 +0000</pubDate>
      
      <guid>https://jgorostegui.github.io/POC.github.io/post/automatizando-con-ansible/</guid>
      <description>Ansible es una potente automatización de TI que puede aprender rápidamente. Es lo suficientemente simple como para que todos en su equipo de TI lo utilicen, pero lo suficientemente potente como para automatizar incluso las implementaciones más complejas. Ansible maneja tareas repetitivas, dando a su equipo más tiempo para concentrarse en la innovación. Simple. Poderoso. Sin agente Con Ansible puede comenzar a hacer un trabajo real en solo minutos debido a su lenguaje simple y legible.</description>
    </item>
    
    <item>
      <title>Tutorial CMake</title>
      <link>https://jgorostegui.github.io/POC.github.io/post/tutorial-cmake/</link>
      <pubDate>Tue, 02 Apr 2019 00:00:00 +0000</pubDate>
      
      <guid>https://jgorostegui.github.io/POC.github.io/post/tutorial-cmake/</guid>
      <description>Este tutorial de CMake proporciona una guía paso a paso que cubre problemas comunes del sistema de compilación que CMake ayuda a resolver. Ver cómo varios temas trabajan juntos en un proyecto de ejemplo puede ser muy útil. La documentación del tutorial y el código fuente de los ejemplos se pueden encontrar en el directorio Ayuda / guía / tutorial del árbol de código fuente de CMake. Cada paso tiene su propio subdirectorio que contiene código que puede usarse como punto de partida.</description>
    </item>
    
    <item>
      <title>Migrate to Hugo from Jekyll</title>
      <link>https://jgorostegui.github.io/POC.github.io/post/migrate-to-hugo-from-jekyll/</link>
      <pubDate>Mon, 10 Mar 2014 00:00:00 +0000</pubDate>
      
      <guid>https://jgorostegui.github.io/POC.github.io/post/migrate-to-hugo-from-jekyll/</guid>
      <description>Move static content to static Jekyll has a rule that any directory not starting with _ will be copied as-is to the _site output. Hugo keeps all static content under static. You should therefore move it all there. With Jekyll, something that looked like
▾ &amp;lt;root&amp;gt;/ ▾ images/ logo.png  should become
▾ &amp;lt;root&amp;gt;/ ▾ static/ ▾ images/ logo.png  Additionally, you&amp;rsquo;ll want any files that should reside at the root (such as CNAME) to be moved to static.</description>
    </item>
    
    <item>
      <title>Colenak</title>
      <link>https://jgorostegui.github.io/POC.github.io/post/colenak/</link>
      <pubDate>Sat, 28 Sep 2013 00:00:00 +0000</pubDate>
      
      <guid>https://jgorostegui.github.io/POC.github.io/post/colenak/</guid>
      <description>Introduction This tutorial will show you how to create a simple theme in Hugo. I assume that you are familiar with HTML, the bash command line, and that you are comfortable using Markdown to format content. I&amp;rsquo;ll explain how Hugo uses templates and how you can organize your templates to create a theme. I won&amp;rsquo;t cover using CSS to style your theme.
We&amp;rsquo;ll start with creating a new site with a very basic template.</description>
    </item>
    
  </channel>
</rss>